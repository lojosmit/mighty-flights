// AI Context for Darts League App ðŸŽ¯
// Last updated: Current Session

{
  "appInfo": {
    "name": "Darts League Web App",
    "description": "A web-first application to manage a darts league with a sleek, dark-themed UI",
    "lastUpdated": "2024-02-21"
  },
  "techStack": {
    "framework": "React",
    "buildTool": "Vite",
    "language": "TypeScript",
    "styling": "Chakra UI",
    "routing": "React Router",
    "stateManagement": "Redux Toolkit",
    "testing": "Jest + ts-jest"
  },
  "currentIssues": {
    "benchRotation": {
      "description": "Players being benched incorrectly",
      "status": "fixed",
      "files": [
        "src/utils/pairingLogic.ts",
        "src/store/slices/gameSlice.ts",
        "src/store/slices/pairingSlice.ts"
      ],
      "fixes": [
        "Added proper bench validation",
        "Implemented bench rotation rules",
        "Added tests to verify bench rotation"
      ]
    },
    "pairingSystem": {
      "description": "Challenger mode rules not being followed correctly",
      "status": "fixed",
      "files": [
        "src/utils/pairingLogic.ts",
        "src/store/slices/pairingSlice.ts"
      ],
      "fixes": [
        "Implemented 3-win limit for Board A",
        "Fixed winner retention logic",
        "Added proper promotion system",
        "Fixed board hierarchy maintenance",
        "Added comprehensive test suite"
      ]
    },
    "timer": {
      "description": "Timer not resetting/starting for new rounds",
      "status": "fixed",
      "files": [
        "src/pages/Game.tsx",
        "src/components/game/GameTimer.tsx"
      ],
      "fixes": [
        "Added proper timer reset in handleStartNextRound",
        "Fixed timer state management"
      ]
    },
    "roundEndingError": {
      "description": "Failed to end round due to state handling issues",
      "status": "pending",
      "priority": "high",
      "files": [
        "src/store/slices/gameSlice.ts",
        "src/pages/Game.tsx"
      ],
      "currentState": {
        "error": "Failed to end round when processing round history",
        "cause": "Inconsistent board data structure between array and object formats",
        "affectedFunctionality": "Round transitions and game progression"
      },
      "requiredFixes": [
        "Update endRound thunk to properly handle board results",
        "Fix round history format consistency",
        "Add proper error handling in the thunk",
        "Ensure consistent data structure between components"
      ],
      "nextSteps": [
        "Review and fix data structure in roundHistory",
        "Add error boundaries for round transitions",
        "Implement proper type checking for board results",
        "Add validation for round state updates"
      ]
    }
  },
  "implementedFeatures": {
    "gameManagement": {
      "boardInitialization": true,
      "roundTransitions": false,
      "winnerSelection": true,
      "doveBonus": true,
      "handicapSystem": true,
      "timerControl": true
    },
    "pairingSystem": {
      "status": "complete",
      "implemented": [
        "Round 1 preview to actual match",
        "Basic pairing logic",
        "Pairing history tracking",
        "Partner suggestions",
        "Matrix visualization component",
        "Win rate tracking structure",
        "Board hierarchy maintenance",
        "Winner retention with 3-win limit",
        "Proper promotions and relegations",
        "Bench rotation rules"
      ]
    }
  },
  "dataStructures": {
    "GamePairings": {
      "pairings": "Array of round pairings with results",
      "pairingCounts": "Tracks times players paired together",
      "pairWins": "Tracks win count for each pair",
      "lastBenchedRound": "Tracks last round each player was benched"
    },
    "PairingLogic": {
      "round1": {
        "sorting": "handicap based",
        "pairing": "win rate based",
        "benching": "fresh start"
      },
      "laterRounds": {
        "sorting": "bench history + win rates",
        "pairing": "diversity + win rates",
        "benching": "rotation based"
      }
    }
  },
  "theme": {
    "colors": {
      "background": "#0B0C10",
      "secondary": "#1F2833",
      "tertiaryText": "#C5C6C7",
      "highlights": "#66FCF1",
      "secondaryHighlights": "#45A29E"
    },
    "components": {
      "boards": "400px fixed width/height",
      "buttons": "48px height",
      "spacing": "6px multiples"
    }
  },
  "projectStructure": {
    "pages": {
      "home": "Landing page with animations, stats, and feature cards",
      "game": "Main game interface with boards, timer, and bench",
      "players": "Player management page",
      "setupWizard": "Game setup and configuration",
      "gameStats": "End of game statistics and results",
      "leaderboard": "Season rankings and player stats"
    },
    "components": {
      "game": {
        "GameBoard": "Individual game board with team displays and controls",
        "GameTimer": "Countdown timer with controls",
        "RoundInfo": "Round progress and info display",
        "BenchDisplay": "Shows benched players",
        "RoundPreview": "Preview next round matchups",
        "PairingMatrix": "Visualize player pairing history"
      },
      "layout": {
        "Navbar": "Main navigation with responsive design",
        "ParticleBackground": "Animated background effects"
      },
      "common": {
        "Button": "Reusable button component",
        "PlayerCard": "Player information display",
        "ScoreCard": "Score tracking component",
        "FeatureCard": "Feature showcase component",
        "StatBox": "Animated statistics display"
      }
    }
  },
  "features": {
    "implemented": {
      "gameManagement": {
        "boardInitialization": "Random team assignments",
        "roundTransitions": "Team promotions/relegations",
        "winnerSelection": "With dove option",
        "benchSystem": "Player rotation"
      },
      "ui": {
        "responsiveLayout": "Mobile and desktop support",
        "animations": "Page and component transitions",
        "darkTheme": "Consistent styling"
      }
    },
    "inProgress": [
      "Game completion flow",
      "Player statistics tracking",
      "Sound effects"
    ],
    "planned": [
      "Player handicaps",
      "Game history",
      "Tournament mode",
      "Achievements system"
    ],
    "rules": {
      "challengerMode": true,
      "playerRotation": true,
      "benchRotation": true,
      "handicapSystem": true
    }
  },
  "routes": {
    "/": "Home page with quick actions and stats",
    "/setup": "Game setup wizard",
    "/game": "Active game screen",
    "/players": "Player management"
  },
  "nextSteps": {
    "immediate": [
      "Fix challenger mode board hierarchy",
      "Implement proper winner retention",
      "Fix promotion logic for 1v1 winners",
      "Implement proper relegation for losers",
      "Ensure benched players get priority for pairing with promoted 1v1 winners"
    ],
    "upcoming": [
      "Add win streak tracking",
      "Implement tournament mode",
      "Add admin console"
    ]
  },
  "rules": {
    "challengerMode": {
      "implemented": false,
      "requirements": [
        "Winners MUST stay on their board if they win (until 3 consecutive on Board A)",
        "Winners from lower boards MUST be promoted",
        "1v1 winners when promoted MUST get a partner (preferably from bench)",
        "Losers MUST move down to lower boards",
        "Board A must be 2v2 whenever possible"
      ]
    },
    "benchRotation": {
      "implemented": true,
      "needsFixing": true,
      "requirements": [
        "Players CANNOT be benched in consecutive rounds",
        "Players CANNOT be benched if others haven't been benched yet",
        "Must rotate in after being benched",
        "Players coming off win streak MUST be benched"
      ]
    }
  },
  "storage": {
    "current": "Local Storage",
    "planned": "Backend migration"
  },
  "testing": {
    "framework": "Jest",
    "coverage": {
      "pairingLogic": {
        "status": "tested",
        "testCases": [
          "Board A winner rotation",
          "1v1 winner promotion",
          "Board hierarchy",
          "Bench rotation"
        ],
        "testFile": "src/utils/pairingLogic.test.ts"
      }
    },
    "requiredTests": [
      "Round ending and state transitions",
      "Round history format validation",
      "Error handling in game state updates"
    ]
  }
} 